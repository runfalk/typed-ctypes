name: CI

on:
  # This avoids having duplicate builds for a pull request
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  lint:
    name: Static analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"
      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: 1.8.2
      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
      - name: Install dev dependencies
        run: poetry install
      - name: Static analysis
        run: ./check.sh

  tests:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]
        os: ["ubuntu-latest"]
    name: Pytest (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: 1.8.3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
      - name: Build FFI test lib
        run: cargo build
        working-directory: testlib
      - name: Set Python version
        run: poetry env use ${{ matrix.python-version }}
      - name: Install dev dependencies
        run: poetry install
      - name: Unit tests
        run: poetry run pytest
